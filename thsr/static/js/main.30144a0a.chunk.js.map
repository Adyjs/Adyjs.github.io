{"version":3,"sources":["components/nav/checking.svg","components/nav/circle.svg","components/nav/triangle.svg","components/nav/cross.svg","components/initial/thsr_1.jpg","components/initial/thsr_2.jpg","components/initial/thsr_3.jpg","components/initial/thsr_4.jpg","components/initial/thsr_5.jpg","components/loadingAnimate/loading-spin.svg","apiEndpoint.js","components/nav/nav.jsx","components/initial/initialHeaderBanner.jsx","components/initial/initialPage.jsx","components/news.jsx","components/header/sidePanel.jsx","components/header/stationPanel.jsx","components/header/oTDOriginPanel.jsx","components/header/oTDDestPanel.jsx","components/header/originToDestStationPanel.jsx","components/header/timeTable.jsx","components/header/trainByDateTimeTable.jsx","components/loadingAnimate/loadingAnimate.jsx","components/header/header.jsx","components/main/stationInfo.jsx","components/main/oTDFareInfo.jsx","components/main/timeTableDetail.jsx","components/main/trainByDateTimeTableDetail.jsx","components/main/main.jsx","components/searchPage.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","apiEndpoint","stationInfo","url","mapUrl","Nangang","Taipei","Banciao","Taoyuan","Hsinchu","Miaoli","Taichung","Changhua","Yunlin","Chiayi","Tainan","Zuoying","ticketFare","THSRRunningState","THSRNews","todayTrainTimeTable","trainNoByDate","Nav","state","navStatus","navItem","navItemId","THSRRunningStateDescribe","THSRRunningStateHandler","_this","react_default","a","createElement","className","style","backgroundImage","checkingImage","color","circleImage","triangleImage","crossImage","navStyleHandler","id","navStatusHandler","e","target","setState","routerLink","ele","_this2","this","axios","then","resp","status","data","length","Status","catch","error","_this3","_this$state","map","index","react_router_dom","key","to","onClick","Component","InitialHeaderBanner","imageArr","image1","image2","image3","image4","image5","count","intervalCounter","imageChanger","image","concat","countAdd","addition","setInterval","clearInterval","Fragment","InitialPage","initial_initialHeaderBanner","News","newsRenderHandler","dataUrl","NewsUrl","title","Title","publishTime","PublishTime","substring","href","rel","console","log","SidePanel","items","itemsId","sidePanelClickedStyle","props","sidePanelStatus","borderBottom","sidePanelRender","sidePanelStatusHandler","StationPanel","btnGroup","north","stationId","en","ch","center","south","stationBtnClickedStyle","stationBtn","backgroundColor","stationBtnRender","stationBtnHandler","_this$state$btnGroup","OTDOriginPanel","btnClickStyleHandler","_this$props","OTDHandler","OTDfrom","OTDDestPanel","OTDdest","OriginToDestStationPanel","submitBtnHandler","alert","_this$props2","oTDOriginPanel","oTDDestPanel","TimeTable","boundForStatus","filteredData","inputOnchangeStatus","timeTableSorting","arr","sort","b","StopTimes","DepartureTime","trainFilterHandler","timeTableData","boundForSouthArr","boundForNorthArr","direction","DailyTrainInfo","Direction","push","renderTimeTableHandler","_this$state$filteredD","timeTableTrainNumberHandler","timeTableTrainNumber","lastStopNumber","TrainNo","StartingStationName","Zh_tw","En","EndingStationName","ArrivalTime","inputFilterTrainByTrainNumber","filterData","filter","indexOf","inputFilterStateHandler","input","value","boundForStatusHandler","renderBoundForHandler","onChange","type","placeholder","pattern","maxLength","minLength","TrainByDateTimeTable","TBDData","TBDStatus","TBDTrainNumberHandler","dateDisplay","TBDSelectedDay","year","getFullYear","month","getMonth","day","getDate","LoadingAnimate","src","LoadingImage","alt","Header","stageRender","TBDSubmit","handleDayClick","TBDSubmitHandler","header_sidePanel","sidePanelStatusInput","header_stationPanel","header_originToDestStationPanel","Date","prototype","addDays","days","date","valueOf","setDate","beforeDisable","afterDisable","DayPicker_default","onDayClick","selectedDays","disabledDays","after","before","dayPickerSubmitBtnDisplayHandler","Array","isArray","header_trainByDateTimeTable","trainByDateTimeTable","header_timeTable","loadingAnimate_loadingAnimate","sidePanelFunctionRender","StationInfo","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getMatchMap","nameInEn","scrollToMapRef","window","scrollTo","mapRef","current","offsetTop","React","createRef","matchInfo","stationData","StationName","nameInZh","address","StationAddress","ref","oTDFareInfo","faresInfoArr","fareFilterHandler","OTDData","originStation","OriginStationName","destStation","DestinationStationName","Fares","TicketType","Price","scrollToBottom","document","body","scrollHeight","TimeTableDetail","detailDataFilter","trainNo","startStop","destStop","stopDiagram","pathStops","stopNumber","stopName","departureTime","scrollToMyRef","height","TrainByDateTimeTableDetail","Main","mainContentRender","OTDsubmit","main_stationInfo","main_oTDFareInfo","main_trainByDateTimeTableDetail","main_timeTableDetail","SearchPage","sidePanelFunctionState","station","OTD","timeTable","TBD","_ref","selected","disabled","tagName","parentNode","_this$state$sidePanel","_this$state$sidePanel2","classList","contains","_this$state$sidePanel3","loadingAnimateHandler","_this$state$sidePanel4","_this$state$data","err","_this$state$data2","_this$state$sidePanel5","header_header","main_main","Footer","App","nav_nav","react_router","path","exact","component","components_footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30144a0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checking.35bde909.svg\";","module.exports = __webpack_public_path__ + \"static/media/circle.32317bc1.svg\";","module.exports = __webpack_public_path__ + \"static/media/triangle.99bc32b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.936cdb42.svg\";","module.exports = __webpack_public_path__ + \"static/media/thsr_1.717f2875.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thsr_2.28ccdd0e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thsr_3.ed97fcdc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thsr_4.79b9ba02.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thsr_5.49fa0edc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading-spin.b5d7f094.svg\";","const apiEndpoint = {\n    stationInfo:{\n        url:\"https://ptx.transportdata.tw/MOTC/v2/Rail/THSR/Station?$format=JSON\",\n        mapUrl:{\n            Nangang:'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d10223.196812135251!2d121.60116977308994!3d25.05287186037319!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMjXCsDAzJzExLjUiTiAxMjHCsDM2JzI1LjQiRQ!5e0!3m2!1szh-TW!2stw!4v1562905614305!5m2!1szh-TW!2stw',\n            Taipei:'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3614.599258989783!2d121.51479431435268!3d25.04767038396597!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMjXCsDAyJzUxLjYiTiAxMjHCsDMxJzAxLjEiRQ!5e0!3m2!1szh-TW!2stw!4v1562906000030!5m2!1szh-TW!2stw',\n            Banciao:'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3615.595117946623!2d121.46240331435186!3d25.013870183981783!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMjXCsDAwJzQ5LjkiTiAxMjHCsDI3JzUyLjUiRQ!5e0!3m2!1szh-TW!2stw!4v1562906084722!5m2!1szh-TW!2stw',\n            Taoyuan:'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3615.624823938912!2d121.21254061435178!3d25.012861283982183!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMjXCsDAwJzQ2LjMiTiAxMjHCsDEyJzUzLjAiRQ!5e0!3m2!1szh-TW!2stw!4v1562906126944!5m2!1szh-TW!2stw',\n            Hsinchu:'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3621.620618977673!2d121.03807161434663!3d24.808441184078497!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMjTCsDQ4JzMwLjQiTiAxMjHCsDAyJzI0LjkiRQ!5e0!3m2!1szh-TW!2stw!4v1562906172546!5m2!1szh-TW!2stw',\n            Miaoli:'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3627.5289491342883!2d120.82308291434175!3d24.605447784174853!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMjTCsDM2JzE5LjYiTiAxMjDCsDQ5JzMxLjAiRQ!5e0!3m2!1szh-TW!2stw!4v1562906215212!5m2!1szh-TW!2stw',\n            Taichung:'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3641.6874641771915!2d120.61377811432945!3d24.112483984412158!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMjTCsDA2JzQ0LjkiTiAxMjDCsDM2JzU3LjUiRQ!5e0!3m2!1szh-TW!2stw!4v1562906252775!5m2!1szh-TW!2stw',\n            Changhua:'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3648.431115132522!2d120.57241911432367!3d23.87432668452846!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMjPCsDUyJzI3LjYiTiAxMjDCsDM0JzI4LjYiRQ!5e0!3m2!1szh-TW!2stw!4v1562906339016!5m2!1szh-TW!2stw',\n            Yunlin:'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3652.3125638406295!2d120.41432281432043!3d23.73623088459635!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMjPCsDQ0JzEwLjQiTiAxMjDCsDI0JzU5LjQiRQ!5e0!3m2!1szh-TW!2stw!4v1562906374917!5m2!1szh-TW!2stw',\n            Chiayi:'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3660.0265444618185!2d120.32106871431377!3d23.45950698473357!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMjPCsDI3JzM0LjIiTiAxMjDCsDE5JzIzLjciRQ!5e0!3m2!1szh-TW!2stw!4v1562906450540!5m2!1szh-TW!2stw',\n            Tainan:'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3674.6825379621932!2d120.28401281430132!3d22.925077385002528!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMjLCsDU1JzMwLjMiTiAxMjDCsDE3JzEwLjMiRQ!5e0!3m2!1szh-TW!2stw!4v1562906489122!5m2!1szh-TW!2stw',\n            Zuoying:'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3681.0981122054773!2d120.30529881429571!3d22.687391285123823!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMjLCsDQxJzE0LjYiTiAxMjDCsDE4JzI3LjAiRQ!5e0!3m2!1szh-TW!2stw!4v1562906523829!5m2!1szh-TW!2stw',\n        },\n    },\n    ticketFare:{\n        url:\"https://ptx.transportdata.tw/MOTC/v2/Rail/THSR/ODFare?$format=JSON\"\n    },\n    THSRRunningState:{\n        url:\"https://ptx.transportdata.tw/MOTC/v2/Rail/THSR/AlertInfo?$format=JSON\"\n    },\n    THSRNews:{\n        url:\"https://ptx.transportdata.tw/MOTC/v2/Rail/THSR/News?$format=JSON\"\n    },\n    todayTrainTimeTable:{\n        url:\"https://ptx.transportdata.tw/MOTC/v2/Rail/THSR/DailyTimetable/Today?$format=JSON\"\n    },\n    trainNoByDate:{\n        url:\"https://ptx.transportdata.tw/MOTC/v2/Rail/THSR/DailyTimetable/TrainDate/\"\n    }\n\n};\n\nexport default apiEndpoint;","import React , {Component} from 'react';\nimport axios from 'axios';\nimport '../../less/nav.css';\nimport {Link} from 'react-router-dom';\n\n/* request url config*/\nimport apiEndpoint from '../../apiEndpoint.js';\n\n/* images*/\nimport checkingImage from './checking.svg';\nimport circleImage from './circle.svg'; \nimport triangleImage from './triangle.svg';\nimport crossImage from './cross.svg';\n\nclass Nav extends Component{\n    state = {\n        navStatus:null,\n        navItem:[\"最新消息\",\"資料查詢\"],\n        navItemId:[\"THSRnews\",'search'],\n        THSRRunningStateDescribe:[\"查詢狀態中\",\"營運正常\",\"營運異常\",\"營運停止\"],\n        THSRRunningState:null,\n    };\n/* color : \n查詢狀態中： checking:    #afafaf\n營運正常：   stable:      #1cee08\n營運異常：   abnormal:    #cece14\n營運停止：   breakdown:   #f62c2c\n*/\n    THSRRunningStateHandler = () => {\n        const {THSRRunningState} = this.state;\n        if(THSRRunningState === null){\n            return (\n                <li className=\"running-state\">\n                    <span \n                        className=\"running-state-image\"\n                        style={{backgroundImage:\"url(\"+checkingImage+\")\"}}>\n                    </span>\n                    <span \n                        className=\"running-state-describe\"\n                        style={{color:\"#afafaf\"}}>查詢狀態中\n                    </span>\n                </li>\n            );\n        }\n        if(THSRRunningState === \"\"){\n            return (\n                <li className=\"running-state\">\n                    <span \n                        className=\"running-state-image\"\n                        style={{backgroundImage:\"url(\"+circleImage+\")\"}}>\n                    </span>\n                    <span \n                        className=\"running-state-describe\"\n                        style={{color:\"#1cee08\"}}>營運正常\n                    </span>\n                </li>\n            );\n        }\n        if(THSRRunningState === \"▲\"){\n            return (\n                <li className=\"running-state\">\n                    <span \n                        className=\"running-state-image\"\n                        style={{backgroundImage:\"url(\"+triangleImage+\")\"}}>\n                    </span>\n                    <span \n                        className=\"running-state-describe\"\n                        style={{color:\"#cece14\"}}>營運異常\n                    </span>\n                </li>\n            );\n        }\n        if(THSRRunningState === \"X\"){\n            return (\n                <li className=\"running-state\">\n                    <span \n                        className=\"running-state-image\"\n                        style={{backgroundImage:\"url(\"+crossImage+\")\"}}>\n                    </span>\n                    <span \n                        className=\"running-state-describe\"\n                        style={{color:\"#f62c2c\"}}>營運停止\n                    </span>\n                </li>\n            );\n        }\n        return null;\n    }\n    \n    /*Level  ['1: 全線正常運行', '2: 有異常狀況'] \n    營運狀態 = ['空白: 正常' , '▲: 其他的異常狀態' , 'X: 全線停止運行'] ,*/\n    componentDidMount(){\n        const {THSRRunningState} = this.state;\n        axios(apiEndpoint.THSRRunningState.url)\n            .then( (resp) => {\n                if( resp.status === 200 &&\n                    (resp.data.length > 0) && \n                    THSRRunningState === null ){\n                        const status = resp.data[0].Status;\n                        this.setState({THSRRunningState:status});\n                }\n                \n            })\n            .catch( (error) => {\n                this.setState({THSRRunningState:error})\n            });\n    }\n\n    /* color : \n    查詢狀態中： checking:    #afafaf\n    營運正常：   stable:      #1cee08\n    營運異常：   abnormal:    #cece14\n    營運停止：   breakdown:   #f62c2c\n    */\n    // navBarBtnClickedStyle = (id) => {\n    //     // {color:\"#ff8300\"}\n    //     const {navStatus} = this.props;\n    //     if(navStatus === id){\n    //         return ({color:\"#ff8300\"});\n    //     }\n    //     return {};\n    // }\n\n    navStyleHandler = (id) => {\n        const {navStatus} = this.state;\n        if(id && id === navStatus){\n            return ({color:\"#ff8300\"});\n        }\n        return ;\n    }\n\n    navStatusHandler = (e) => {\n        const target = e.target;\n        this.setState({\n            navStatus:target.id\n        });\n        // console.log(e.target.id);\n    }\n\n    routerLink = (ele) => {\n        if(ele === \"THSRnews\"){\n            return \"/news\";\n        }\n        if(ele === \"search\"){\n            return \"/search\";\n        };\n    }\n\n    render(){\n        const {navItem , navItemId} = this.state;\n        // const {navStatusHandler} = this.props;\n        return (\n            <nav>\n                <div className=\"nav-title\">\n                    <h1 className=\"nav-ch-title\">台灣高鐵公開資訊查詢</h1>\n                    <h1 className=\"nav-en-title\">THSR Public Info</h1>\n                </div>\n                <div className=\"nav-item-row\">\n                    <ul>\n                        {this.THSRRunningStateHandler()}\n                        {\n                            navItem.map( (ele , index) => {\n                                return (\n                                    <Link key={index} to={this.routerLink(navItemId[index])}>\n                                    <li \n                                        onClick={this.navStatusHandler}\n                                        key={index}\n                                        id={navItemId[index]}\n                                        style={\n                                            this.navStyleHandler(navItemId[index])\n                                        }>\n                                        {ele}\n                                    </li>\n                                    </Link>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n            </nav>\n        );\n    };\n}\n\nexport default Nav;","import React , {Component} from 'react';\nimport '../../less/initialHeaderBanner.css';\nimport image1 from './thsr_1.jpg';\nimport image2 from './thsr_2.jpg';\nimport image3 from './thsr_3.jpg';\nimport image4 from './thsr_4.jpg';\nimport image5 from './thsr_5.jpg';\n\nclass InitialHeaderBanner extends Component{\n\n    state = {\n        imageArr:[image1 , image2 , image3 , image4 , image5],\n        count:0,\n    }\n\n    intervalCounter = 0;\n\n    imageChanger = () => {\n        const {imageArr , count} = this.state;\n        const image = imageArr[count%5];\n        if(count%2 !== 0){\n            return(\n                <article \n                    className=\"banner-container\"\n                    style={{backgroundImage:`url(${image})`}}\n                >\n                </article>\n            );\n        }\n        return(\n            <div \n                className=\"banner-container\"\n                style={{backgroundImage:`url(${image})`}}\n            >\n            </div>\n        );\n        \n    }\n    \n\n    countAdd = () => {\n        const {count} = this.state;\n        const addition = count + 1;\n        this.setState({count:addition});\n        return ;\n    }\n\n    componentDidMount(){\n        this.intervalCounter = setInterval( this.countAdd , 5000 );\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalCounter);\n    }\n\n    render(){\n        \n        return (\n            <React.Fragment>\n                {this.imageChanger()}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default InitialHeaderBanner;","import React , {Component} from 'react';\nimport InitialHeaderBanner from './initialHeaderBanner.jsx';\n\nclass InitialPage extends Component {\n    render(){\n        return (\n            <InitialHeaderBanner />\n        );\n    }\n}\n\nexport default InitialPage;","import React , {Component} from 'react';\nimport '../less/news.css';\nimport axios from 'axios';\nimport apiEndpoint from '../apiEndpoint';\n\n\nclass News extends Component{\n\n    state = {\n        data:null\n    }\n\n\n    newsRenderHandler = () => {\n        const {data} = this.state; \n        \n        if( data !== null &&\n            data.data.length > 0 ){\n\n            const dataArr = data.data;\n            return (dataArr.map( (ele , index) => {\n                const dataUrl = ele.NewsUrl;\n                const title = ele.Title;\n                const publishTime = ele.PublishTime.substring(0,10);\n                return (\n                    <article key={index} className=\"news-row\">\n                        <span className=\"news-publish-time\">\n                            {publishTime}\n                        </span>\n                        <p className=\"news-title\">\n                            <a href={dataUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {title}\n                            </a>\n                        </p>\n                    </article>\n                )\n            }))\n        };\n        return (\n            <article key=\"no-news\" className=\"news-row\">\n                <span className=\"news-publish-time\"></span>\n                <p className=\"news-title\">無資料</p>\n            </article>\n        );\n    }\n\n\n    componentDidMount(){\n        axios(apiEndpoint.THSRNews.url)\n            .then( (resp) => {\n                if( resp.status === 200){\n                    console.log(resp.data.length)\n                    this.setState({\n                        data:resp\n                    })\n                };\n            })\n            .catch( (error) => {\n                console.log(error);\n            });\n    }\n\n    render(){\n        return (\n            <div className=\"news-container\">\n                {this.newsRenderHandler()}\n            </div>\n        );\n    }\n}\n\nexport default News;","import React , {Component} from 'react';\nimport '../../less/sidePanel.css';\n\nclass SidePanel extends Component {\n    state = {\n        items:[\"車站\" , \"票價\" ,\"日期\" ,\"時刻表\" ],\n        itemsId:['station', 'ticketFare', 'date' ,'timeTable'],\n    };\n\n    \n\n    sidePanelClickedStyle = (id) => {\n        const {sidePanelStatus} = this.props;\n        if(sidePanelStatus === id){\n            return (\n                {\n                    color:\"#ff8300\",\n                    borderBottom:\"#ff8300 solid 1px\"\n                }\n            )\n        };\n        return {};\n    };\n\n    sidePanelRender = () => {\n        const {items , itemsId} = this.state;\n        const {sidePanelStatusHandler} = this.props;\n        return items.map( (ele , index) => {\n            return (\n                <li \n                    onClick={sidePanelStatusHandler} \n                    style={this.sidePanelClickedStyle(itemsId[index])}\n                    id={itemsId[index]} \n                    key={index}>\n                    {ele}\n                </li>\n            )\n        });\n    }\n\n    render(){\n        // console.log(this.sidePanelRender())\n        return (\n            <aside id=\"panel\" className=\"panel-class\">\n                <ul>\n                    {this.sidePanelRender()}\n                </ul>\n            </aside>\n        );\n    };\n} \n\nexport default SidePanel;","import React , {Component} from 'react';\nimport '../../less/stationPanel.css';\n\nclass StationPanel extends Component {\n    state = {\n        btnGroup:{\n            north:[\n                {stationId:\"0990\", en:\"Nangang\",ch:\"南港\"} ,\n                {stationId:\"1000\", en:\"Taipei\",ch:\"台北\"} , \n                {stationId:\"1010\", en:\"Banciao\",ch:\"板橋\"} , \n                {stationId:\"1020\", en:\"Taoyuan\",ch:\"桃園\"} , \n                {stationId:\"1030\", en:\"Hsinchu\",ch:\"新竹\"}\n            ],\n            center:[\n                {stationId:\"1035\", en:\"Miaoli\",ch:\"苗栗\"} ,\n                {stationId:\"1040\", en:\"Taichung\",ch:\"台中\"} , \n                {stationId:\"1043\", en:\"Changhua\",ch:\"彰化\"} , \n                {stationId:\"1047\", en:\"Yunlin\",ch:\"雲林\"}\n            ],\n            south:[\n                {stationId:\"1050\", en:\"Chiayi\",ch:\"嘉義\"} , \n                {stationId:\"1060\", en:\"Tainan\",ch:\"台南\"} , \n                {stationId:\"1070\", en:\"Zuoying\",ch:\"左營\"}\n            ],\n        },\n\n    }\n\n    /*車站按鈕點選 樣式改變*/\n    stationBtnClickedStyle = (id) => {\n        const {stationBtn} = this.props;\n        \n        if(stationBtn === id){\n            return ({\n                backgroundColor:\"#ff8300\",\n                color:\"white\",\n            });\n        }\n        return {};\n    }\n\n\n    /* render state 的按鈕*/\n    stationBtnRender = (ele , index) => {\n        const { stationBtnHandler} = this.props;\n\n        return (\n            <div\n                style={this.stationBtnClickedStyle(ele.en)} \n                key={index}\n                onClick={stationBtnHandler}\n                id={ele.en}\n                className=\"station-btn panel\">\n                {ele.ch}\n            </div>\n        )\n    }\n\n\n    render(){\n        const {north , center , south} = this.state.btnGroup;\n        return (\n            <ul id=\"station-info-panel\" className=\"station-btn-group\">\n                <div className=\"area-title\">北部</div>\n                <li>\n                    {north.map( this.stationBtnRender )}\n                </li>\n\n                <div className=\"area-title\">中部</div>\n                <li>\n                    {center.map( this.stationBtnRender )}\n                </li>\n\n                <div className=\"area-title\">南部</div>\n                <li>\n                    {south.map( this.stationBtnRender )}\n                </li>\n            </ul>\n        );\n    };\n}\n\n\nexport default StationPanel;\n\n","import React , {Component} from 'react';\n\nclass OTDOriginPanel extends Component{\n\n    state = {\n        btnGroup:{\n            north:[\n                {stationId:\"0990\", en:\"Nangang\",ch:\"南港\"} ,\n                {stationId:\"1000\", en:\"Taipei\",ch:\"台北\"} , \n                {stationId:\"1010\", en:\"Banciao\",ch:\"板橋\"} , \n                {stationId:\"1020\", en:\"Taoyuan\",ch:\"桃園\"} , \n                {stationId:\"1030\", en:\"Hsinchu\",ch:\"新竹\"}\n            ],\n            center:[\n                {stationId:\"1035\", en:\"Miaoli\",ch:\"苗栗\"} ,\n                {stationId:\"1040\", en:\"Taichung\",ch:\"台中\"} , \n                {stationId:\"1043\", en:\"Changhua\",ch:\"彰化\"} , \n                {stationId:\"1047\", en:\"Yunlin\",ch:\"雲林\"}\n            ],\n            south:[\n                {stationId:\"1050\", en:\"Chiayi\",ch:\"嘉義\"} , \n                {stationId:\"1060\", en:\"Tainan\",ch:\"台南\"} , \n                {stationId:\"1070\", en:\"Zuoying\",ch:\"左營\"}\n            ],\n        },\n    }\n\n    /*車站按鈕點選 樣式改變*/\n    btnClickStyleHandler = (ele , index) => {\n        const {OTDHandler , OTDfrom} = this.props;\n        // const {origin:originBtnClicked} = this.props.originToDestStationPanelStatus;\n\n        if( ele.en !== OTDfrom){\n            return (\n                <div \n                    key={index}\n                    id={ele.en}\n                    onClick={OTDHandler}\n                    className=\"station-btn origin-panel\"\n                >{ele.ch}</div>\n            );\n        }\n        else{\n            return (\n                <div\n                    style={{\n                        backgroundColor:\"#ff8300\",\n                        color:\"white\",\n                    }} \n                    key={index}\n                    id={ele.en}\n                    onClick={OTDHandler}\n                    className=\"station-btn origin-panel\"\n                >{ele.ch}</div>\n            )\n        }\n    }\n\n\n    render(){\n        const {north , center , south} = this.state.btnGroup;\n        return (\n            <ul id=\"station-info-panel\" className=\"station-btn-group\">\n                <div className=\"area-title\">北部</div>\n                <li>\n                    {north.map( this.btnClickStyleHandler )}\n                </li>\n\n                <div className=\"area-title\">中部</div>\n                <li>\n                    {center.map( this.btnClickStyleHandler )}\n                </li>\n\n                <div className=\"area-title\">南部</div>\n                <li>\n                    {south.map( this.btnClickStyleHandler )}\n                </li>\n            </ul>\n        );\n    };\n\n}\n\nexport default OTDOriginPanel;\n\n","import React , {Component} from 'react';\n\nclass OTDDestPanel extends Component{\n\n    state = {\n        btnGroup:{\n            north:[\n                {stationId:\"0990\", en:\"Nangang\",ch:\"南港\"} ,\n                {stationId:\"1000\", en:\"Taipei\",ch:\"台北\"} , \n                {stationId:\"1010\", en:\"Banciao\",ch:\"板橋\"} , \n                {stationId:\"1020\", en:\"Taoyuan\",ch:\"桃園\"} , \n                {stationId:\"1030\", en:\"Hsinchu\",ch:\"新竹\"}\n            ],\n            center:[\n                {stationId:\"1035\", en:\"Miaoli\",ch:\"苗栗\"} ,\n                {stationId:\"1040\", en:\"Taichung\",ch:\"台中\"} , \n                {stationId:\"1043\", en:\"Changhua\",ch:\"彰化\"} , \n                {stationId:\"1047\", en:\"Yunlin\",ch:\"雲林\"}\n            ],\n            south:[\n                {stationId:\"1050\", en:\"Chiayi\",ch:\"嘉義\"} , \n                {stationId:\"1060\", en:\"Tainan\",ch:\"台南\"} , \n                {stationId:\"1070\", en:\"Zuoying\",ch:\"左營\"}\n            ],\n        },\n    }\n\n    /*車站按鈕點選 樣式改變*/\n    btnClickStyleHandler = (ele , index) => {\n        const {OTDHandler , OTDdest} = this.props;\n        // const {dest} = this.props.originToDestStationPanelStatus;\n        \n        if( ele.en !== OTDdest){\n            return (\n                <div \n                    key={index}\n                    id={ele.en}\n                    onClick={OTDHandler}\n                    className=\"station-btn dest-panel\"\n                >{ele.ch}</div>\n            );\n        }\n        else{\n            return (\n                <div\n                    style={{\n                        backgroundColor:\"#ff8300\",\n                        color:\"white\",\n                    }} \n                    key={index}\n                    id={ele.en}\n                    onClick={OTDHandler}\n                    className=\"station-btn  dest-panel\"\n                >{ele.ch}</div>\n            )\n        }\n    }\n\n\n    render(){\n        const {north , center , south} = this.state.btnGroup;\n        return (\n            <ul id=\"station-info-panel\" className=\"station-btn-group\">\n                <div className=\"area-title\">北部</div>\n                <li>\n                    {north.map( this.btnClickStyleHandler )}\n                </li>\n\n                <div className=\"area-title\">中部</div>\n                <li>\n                    {center.map( this.btnClickStyleHandler )}\n                </li>\n\n                <div className=\"area-title\">南部</div>\n                <li>\n                    {south.map( this.btnClickStyleHandler )}\n                </li>\n            </ul>\n        );\n    };\n\n\n}\n\nexport default OTDDestPanel;\n\n","import React , {Component} from 'react';\nimport '../../less/originToDestStationPanel.css';\nimport OTDOriginPanel from './oTDOriginPanel.jsx';\nimport OTDDestPanel from './oTDDestPanel.jsx'\n\n\n\nclass OriginToDestStationPanel extends Component {\n\n    state = {\n\n    }\n\n    submitBtnHandler = () => {\n        const {OTDfrom , OTDdest , OTDHandler} = this.props;\n        // const {OTDHandler} = this.props;\n        // const {origin , dest} = this.props.originToDestStationPanelStatus;\n        if( (OTDfrom === null) || (OTDdest === null)){\n            return null;\n        };\n        if( (OTDfrom !== null) && (OTDdest !== null) && (OTDfrom === OTDdest)){\n            alert('『出發站』與『到達站』相同，請重新選擇');\n            return null;\n        };\n        if(OTDfrom && OTDdest){\n            return (\n                <div\n                    className=\"submit-btn\"\n                    id=\"bubmit-btn\"\n                    onClick={OTDHandler}\n                    >查詢\n                </div>\n            );\n        };\n        \n    }\n\n    render(){\n        const { OTDHandler ,\n                OTDfrom ,\n                OTDdest    \n        } = this.props;\n\n        \n        return (\n            <div className=\"origin-to-dest-station-panel\">\n                <article className=\"station-panel-set origin\">\n                    <div className=\"info-title from\">出發站</div>\n                    <OTDOriginPanel \n                        OTDfrom={OTDfrom}\n                        OTDHandler={OTDHandler}\n                    />\n                </article>\n                <article className=\"station-panel-set dest\">\n                    <div className=\"info-title end\">到達站</div>\n                    <OTDDestPanel \n                        OTDdest={OTDdest}\n                        OTDHandler={OTDHandler}\n                    />\n                </article>\n                {this.submitBtnHandler()}\n            </div>\n        );\n    }\n}\n\nexport default OriginToDestStationPanel;","import React , {Component} from 'react';\nimport '../../less/timeTable.css';\nimport '../../apiEndpoint';\n\n\nclass TimeTable extends Component{\n    \n    state = {\n        /* 南下北上按鈕狀態*/\n        boundForStatus:'south',\n\n        /* 南北列車資料陣列*/\n        filteredData:{\n            south:null,\n            north:null\n        },\n\n        /* 輸入車次的狀態儲存*/\n        inputOnchangeStatus:null\n\n    }\n\n    /* 開車時間排序 function */\n    timeTableSorting = (arr) => {\n        arr.sort( (a , b) => {\n            if(a.StopTimes[0].DepartureTime > b.StopTimes[0].DepartureTime){\n                return 1;\n            }\n            if(a.StopTimes[0].DepartureTime < b.StopTimes[0].DepartureTime){\n                return -1;\n            }\n            return 0;\n        })\n        return arr;\n    }\n\n    /* 整理 app.jsx 傳下來的時刻表資料 props*/\n    trainFilterHandler = () => {\n        const {timeTableData} = this.props;\n        const {boundForStatus} = this.state;\n\n        if(timeTableData !== null && boundForStatus){\n            let boundForSouthArr = [];\n            let boundForNorthArr = [];\n             timeTableData.map( (ele , index) => {\n                const direction = ele.DailyTrainInfo.Direction;\n\n                /* 依照開車方向篩選成陣列，1 南下，0 北上*/\n                if(direction === 0){\n                    boundForSouthArr.push(ele);\n                }\n                if(direction === 1){\n                    boundForNorthArr.push(ele);\n                }\n                return null;\n            });\n\n            /* 篩選後陣列依照開車時間排序 */\n            boundForSouthArr = this.timeTableSorting(boundForSouthArr);\n            boundForNorthArr = this.timeTableSorting(boundForNorthArr);\n            this.setState({\n                filteredData:{\n                    south:boundForSouthArr,\n                    north:boundForNorthArr,\n                }\n            })\n            \n        }\n    }\n\n\n\n    \n\n    /* 依照南下北上 state，render 時刻表列表*/\n    renderTimeTableHandler = (e) => {\n        const {south , north} = this.state.filteredData;\n        const {boundForStatus} = this.state;\n        const {timeTableTrainNumberHandler , timeTableTrainNumber} = this.props;\n\n        if(boundForStatus === 'south' && south !== null){\n            // return south.map( (ele , index) => {\n            const data = south.map( (ele , index) => {\n                const lastStopNumber = (ele.StopTimes.length-1);\n                const id = ele.DailyTrainInfo.TrainNo;\n\n                if( id === timeTableTrainNumber){\n                    return (\n                        <article \n                            style={{\n                                backgroundColor:\"#ff8300\"\n                            }}\n                            key={ele.DailyTrainInfo.TrainNo}\n                            id={ele.DailyTrainInfo.TrainNo}\n                            onClick={timeTableTrainNumberHandler}\n                        >\n                             <div className=\"train-no\">\n                                {ele.DailyTrainInfo.TrainNo}\n                            </div>\n                             <div className=\"origin-stop stops\">\n                                 <span>\n                                    {ele.DailyTrainInfo.StartingStationName.Zh_tw} ({ele.DailyTrainInfo.StartingStationName.En})\n                                </span>\n                                 <span>\n                                    {ele.StopTimes[0].DepartureTime}\n                                 </span>\n                             </div>\n                             <div className=\"to-sign\"></div>\n                             <div className=\"dest-stop stops\">\n                                 <span>\n                                     {ele.DailyTrainInfo.EndingStationName.Zh_tw} ({ele.DailyTrainInfo.EndingStationName.En}) \n                                 </span>\n                                 <span>\n                                    {ele.StopTimes[lastStopNumber].ArrivalTime}\n                                 </span>\n                             </div>\n                         </article>\n                    );\n                }\n                return (\n                    <article \n                        key={ele.DailyTrainInfo.TrainNo}\n                        id={ele.DailyTrainInfo.TrainNo}\n                        onClick={timeTableTrainNumberHandler}\n                    >\n                         <div className=\"train-no\">\n                            {ele.DailyTrainInfo.TrainNo}\n                        </div>\n                         <div className=\"origin-stop stops\">\n                             <span>\n                                {ele.DailyTrainInfo.StartingStationName.Zh_tw} ({ele.DailyTrainInfo.StartingStationName.En})\n                            </span>\n                             <span>\n                                {ele.StopTimes[0].DepartureTime}\n                             </span>\n                         </div>\n                         <div className=\"to-sign\"></div>\n                         <div className=\"dest-stop stops\">\n                             <span>\n                                 {ele.DailyTrainInfo.EndingStationName.Zh_tw} ({ele.DailyTrainInfo.EndingStationName.En}) \n                             </span>\n                             <span>\n                                {ele.StopTimes[lastStopNumber].ArrivalTime}\n                             </span>\n                         </div>\n                     </article>\n                );\n            });\n            return (this.inputFilterTrainByTrainNumber(data));\n        };\n        if(boundForStatus === 'north' && north !== null){\n            const data = north.map( (ele , index) => {\n                const lastStopNumber = (ele.StopTimes.length-1);\n                const id = ele.DailyTrainInfo.TrainNo;\n\n                if(id === timeTableTrainNumber){\n                    return (\n                        <article\n                            style={{\n                                backgroundColor:\"#ff8300\"\n                            }}\n                            key={ele.DailyTrainInfo.TrainNo}\n                            id={ele.DailyTrainInfo.TrainNo}\n                            onClick={timeTableTrainNumberHandler}\n                            >\n                             <div className=\"train-no\">\n                                {ele.DailyTrainInfo.TrainNo}\n                            </div>\n                             <div className=\"origin-stop stops\">\n                                 <span>\n                                    {ele.DailyTrainInfo.StartingStationName.Zh_tw} ({ele.DailyTrainInfo.StartingStationName.En})\n                                </span>\n                                 <span>\n                                    {ele.StopTimes[0].DepartureTime}\n                                 </span>\n                             </div>\n                             <div className=\"to-sign\"></div>\n                             <div className=\"dest-stop stops\">\n                                 <span>\n                                     {ele.DailyTrainInfo.EndingStationName.Zh_tw} ({ele.DailyTrainInfo.EndingStationName.En}) \n                                 </span>\n                                 <span>\n                                    {ele.StopTimes[lastStopNumber].ArrivalTime}\n                                 </span>\n                             </div>\n                         </article>\n                    );\n                }\n                return (\n                    <article\n                        key={ele.DailyTrainInfo.TrainNo}\n                        id={ele.DailyTrainInfo.TrainNo}\n                        onClick={timeTableTrainNumberHandler}\n                        >\n                         <div className=\"train-no\">\n                            {ele.DailyTrainInfo.TrainNo}\n                        </div>\n                         <div className=\"origin-stop stops\">\n                             <span>\n                                {ele.DailyTrainInfo.StartingStationName.Zh_tw} ({ele.DailyTrainInfo.StartingStationName.En})\n                            </span>\n                             <span>\n                                {ele.StopTimes[0].DepartureTime}\n                             </span>\n                         </div>\n                         <div className=\"to-sign\"></div>\n                         <div className=\"dest-stop stops\">\n                             <span>\n                                 {ele.DailyTrainInfo.EndingStationName.Zh_tw} ({ele.DailyTrainInfo.EndingStationName.En}) \n                             </span>\n                             <span>\n                                {ele.StopTimes[lastStopNumber].ArrivalTime}\n                             </span>\n                         </div>\n                     </article>\n                );\n            });\n            return (this.inputFilterTrainByTrainNumber(data));\n        };\n        \n    }\n\n\n    \n\n    inputFilterTrainByTrainNumber = (data) => {\n        const {inputOnchangeStatus} = this.state;\n        \n        const filterData = data.filter( (ele) => {\n            return ele.props.id.indexOf(inputOnchangeStatus) > (-1)\n        });\n        \n        if(filterData.length === 0 && inputOnchangeStatus !== null){\n            return (\n                <div>\n                    <h3 className=\"input-zero-related-result\">無相關車次資料</h3>\n                </div>\n            )\n        }\n        if(filterData.length !== 0 && inputOnchangeStatus !== null){\n            return filterData;\n        }\n        if(inputOnchangeStatus === null){\n            return data;\n        }\n        return null;\n        \n    }\n\n\n    inputFilterStateHandler = (e) => {\n        // console.log(e.target.value);\n        const input = e.target.value;\n        const len = input.length;\n        if(len !== 0){\n            this.setState({\n                inputOnchangeStatus:input\n            })\n        }\n        else{\n            this.setState({\n                inputOnchangeStatus:null\n            })\n        }\n    }\n\n\n\n    /* 南下北上按鈕 state setting handler*/\n    boundForStatusHandler = (e) => {\n        this.setState({\n            boundForStatus:e.target.id\n        })\n    }\n\n    /* 南下北上按鈕 style handler*/\n    renderBoundForHandler = () => {\n        const {boundForStatus} = this.state;\n\n        if(boundForStatus === 'south'){\n            return (\n                <React.Fragment>\n                    <h3 \n                        onClick={this.boundForStatusHandler}\n                        id=\"south\"\n                        className=\"bound-for-south\"\n                        style={{\n                            backgroundColor:\"#ff8300\",\n                            color:\"white\"\n                        }}\n                        >南下班次\n                    </h3>\n                    <h3 \n                        onClick={this.boundForStatusHandler}\n                        id=\"north\"\n                        className=\"bound-for-north\"\n                        >北上班次\n                    </h3>\n                    <div className=\"input-container\">\n                        <input\n                            onChange={this.inputFilterStateHandler} \n                            className=\"train-no-input\" \n                            type=\"search\" \n                            placeholder=\"輸入車次搜尋…\"\n                            pattern=\"[0-9]\"\n                            title=\"輸入車次(0-9)搜尋\"\n                            maxLength=\"4\"\n                            minLength=\"0\"\n                            >\n                        </input>\n                    </div>\n                </React.Fragment>\n            );\n        }\n        if(boundForStatus === 'north'){\n            return (\n                <React.Fragment>\n                    <h3 \n                        onClick={this.boundForStatusHandler}\n                        id=\"south\"\n                        className=\"bound-for-south\">南下班次</h3>\n                    <h3 \n                        onClick={this.boundForStatusHandler}\n                        id=\"north\"\n                        className=\"bound-for-north\"\n                        style={{\n                            backgroundColor:\"#ff8300\",\n                            color:\"white\"\n                        }}\n                        >北上班次\n                    </h3>\n                    <div className=\"input-container\">\n                        <input\n                            onChange={this.inputFilterStateHandler} \n                            className=\"train-no-input\" \n                            type=\"search\" \n                            placeholder=\"輸入車次搜尋…\"\n                            pattern=\"[0-9]\"\n                            title=\"輸入車次(0-9)搜尋\"\n                            maxLength=\"4\"\n                            minLength=\"0\"\n                            >\n                        </input>\n                    </div>\n                </React.Fragment>\n            );\n        }\n        return null;\n        \n    }\n\n\n\n    /* 在 did mount 的時候，就先整理列車時刻表資料*/\n    componentDidMount(){\n        this.trainFilterHandler();\n    }\n\n\n    render(){\n        // console.log('check status',this.state.inputOnchangeStatus);\n        return (\n            <div className=\"timetable-container\">\n                <h3 className=\"timetable\">今日時刻表</h3>\n                {this.renderBoundForHandler()}\n                {this.renderTimeTableHandler()}\n            </div>\n        );\n    }\n}\n\nexport default TimeTable;","import React , {Component} from 'react';\nimport '../../less/trainByDateTimeTable.css';\nimport '../../apiEndpoint';\n\n\nclass TrainByDateTimeTable extends Component{\n    \n    state = {\n        /* 南下北上按鈕狀態*/\n        boundForStatus:'south',\n\n        /* 南北列車資料陣列*/\n        filteredData:{\n            south:null,\n            north:null\n        },\n\n        /* 輸入車次的狀態儲存*/\n        inputOnchangeStatus:null\n\n    }\n\n    /* 開車時間排序 function */\n    timeTableSorting = (arr) => {\n        arr.sort( (a , b) => {\n            if(a.StopTimes[0].DepartureTime > b.StopTimes[0].DepartureTime){\n                return 1;\n            }\n            if(a.StopTimes[0].DepartureTime < b.StopTimes[0].DepartureTime){\n                return -1;\n            }\n            return 0;\n        })\n        return arr;\n    };\n\n    /* 整理 app.jsx 傳下來的時刻表資料 props*/\n    trainFilterHandler = () => {\n        const {TBDData} = this.props;\n        const {boundForStatus} = this.state;\n\n        if(TBDData !== null && boundForStatus){\n            let boundForSouthArr = [];\n            let boundForNorthArr = [];\n             TBDData.map( (ele , index) => {\n                const direction = ele.DailyTrainInfo.Direction;\n\n                /* 依照開車方向篩選成陣列，1 南下，0 北上*/\n                if(direction === 0){\n                    boundForSouthArr.push(ele);\n                }\n                if(direction === 1){\n                    boundForNorthArr.push(ele);\n                }\n                return null;\n            });\n\n            /* 篩選後陣列依照開車時間排序 */\n            boundForSouthArr = this.timeTableSorting(boundForSouthArr);\n            boundForNorthArr = this.timeTableSorting(boundForNorthArr);\n            this.setState({\n                filteredData:{\n                    south:boundForSouthArr,\n                    north:boundForNorthArr,\n                }\n            })\n            \n        }\n    }\n\n\n\n    \n\n    /* 依照南下北上 state，render 時刻表列表*/\n    renderTimeTableHandler = (e) => {\n        const {south , north} = this.state.filteredData;\n        const {boundForStatus} = this.state;\n        const {\n            // trainByDateTimeTableDetail  , \n            TBDStatus,\n            TBDTrainNumberHandler\n        } = this.props;\n\n        if(boundForStatus === 'south' && south !== null){\n            // return south.map( (ele , index) => {\n            const data = south.map( (ele , index) => {\n                const lastStopNumber = (ele.StopTimes.length-1);\n                const id = ele.DailyTrainInfo.TrainNo;\n\n                if( id === TBDStatus){\n                    return (\n                        <article \n                            style={{\n                                backgroundColor:\"#ff8300\"\n                            }}\n                            key={ele.DailyTrainInfo.TrainNo}\n                            id={ele.DailyTrainInfo.TrainNo}\n                            onClick={TBDTrainNumberHandler}\n                            // onClick={trainByDateTimeTableDetail }\n                        >\n                             <div className=\"train-number\">\n                                {ele.DailyTrainInfo.TrainNo}\n                            </div>\n                             <div className=\"origin-stop stops\">\n                                 <span>\n                                    {ele.DailyTrainInfo.StartingStationName.Zh_tw} ({ele.DailyTrainInfo.StartingStationName.En})\n                                </span>\n                                 <span>\n                                    {ele.StopTimes[0].DepartureTime}\n                                 </span>\n                             </div>\n                             <div className=\"to-sign\"></div>\n                             <div className=\"dest-stop stops\">\n                                 <span>\n                                     {ele.DailyTrainInfo.EndingStationName.Zh_tw} ({ele.DailyTrainInfo.EndingStationName.En}) \n                                 </span>\n                                 <span>\n                                    {ele.StopTimes[lastStopNumber].ArrivalTime}\n                                 </span>\n                             </div>\n                         </article>\n                    );\n                }\n                return (\n                    <article \n                        key={ele.DailyTrainInfo.TrainNo}\n                        id={ele.DailyTrainInfo.TrainNo}\n                        onClick={TBDTrainNumberHandler}\n                        // onClick={trainByDateTimeTableDetail }\n                    >\n                         <div className=\"train-number\">\n                            {ele.DailyTrainInfo.TrainNo}\n                        </div>\n                         <div className=\"origin-stop stops\">\n                             <span>\n                                {ele.DailyTrainInfo.StartingStationName.Zh_tw} ({ele.DailyTrainInfo.StartingStationName.En})\n                            </span>\n                             <span>\n                                {ele.StopTimes[0].DepartureTime}\n                             </span>\n                         </div>\n                         <div className=\"to-sign\"></div>\n                         <div className=\"dest-stop stops\">\n                             <span>\n                                 {ele.DailyTrainInfo.EndingStationName.Zh_tw} ({ele.DailyTrainInfo.EndingStationName.En}) \n                             </span>\n                             <span>\n                                {ele.StopTimes[lastStopNumber].ArrivalTime}\n                             </span>\n                         </div>\n                     </article>\n                );\n            });\n            return (this.inputFilterTrainByTrainNumber(data));\n        };\n        if(boundForStatus === 'north' && north !== null){\n            const data = north.map( (ele , index) => {\n                const lastStopNumber = (ele.StopTimes.length-1);\n                const id = ele.DailyTrainInfo.TrainNo;\n\n                if(id === TBDStatus){\n                    return (\n                        <article\n                            style={{\n                                backgroundColor:\"#ff8300\"\n                            }}\n                            key={ele.DailyTrainInfo.TrainNo}\n                            id={ele.DailyTrainInfo.TrainNo}\n                            onClick={TBDTrainNumberHandler}\n                            // onClick={trainByDateTimeTableDetail }\n                            >\n                             <div className=\"train-number\">\n                                {ele.DailyTrainInfo.TrainNo}\n                            </div>\n                             <div className=\"origin-stop stops\">\n                                 <span>\n                                    {ele.DailyTrainInfo.StartingStationName.Zh_tw} ({ele.DailyTrainInfo.StartingStationName.En})\n                                </span>\n                                 <span>\n                                    {ele.StopTimes[0].DepartureTime}\n                                 </span>\n                             </div>\n                             <div className=\"to-sign\"></div>\n                             <div className=\"dest-stop stops\">\n                                 <span>\n                                     {ele.DailyTrainInfo.EndingStationName.Zh_tw} ({ele.DailyTrainInfo.EndingStationName.En}) \n                                 </span>\n                                 <span>\n                                    {ele.StopTimes[lastStopNumber].ArrivalTime}\n                                 </span>\n                             </div>\n                         </article>\n                    );\n                }\n                return (\n                    <article\n                        key={ele.DailyTrainInfo.TrainNo}\n                        id={ele.DailyTrainInfo.TrainNo}\n                        onClick={TBDTrainNumberHandler}\n                        // onClick={trainByDateTimeTableDetail }\n                        >\n                         <div className=\"train-number\">\n                            {ele.DailyTrainInfo.TrainNo}\n                        </div>\n                         <div className=\"origin-stop stops\">\n                             <span>\n                                {ele.DailyTrainInfo.StartingStationName.Zh_tw} ({ele.DailyTrainInfo.StartingStationName.En})\n                            </span>\n                             <span>\n                                {ele.StopTimes[0].DepartureTime}\n                             </span>\n                         </div>\n                         <div className=\"to-sign\"></div>\n                         <div className=\"dest-stop stops\">\n                             <span>\n                                 {ele.DailyTrainInfo.EndingStationName.Zh_tw} ({ele.DailyTrainInfo.EndingStationName.En}) \n                             </span>\n                             <span>\n                                {ele.StopTimes[lastStopNumber].ArrivalTime}\n                             </span>\n                         </div>\n                     </article>\n                );\n            });\n            return (this.inputFilterTrainByTrainNumber(data));\n        };\n        \n    }\n\n\n    \n\n    inputFilterTrainByTrainNumber = (data) => {\n        const {inputOnchangeStatus} = this.state;\n        const filterData = data.filter( (ele) => {\n            return ele.props.id.indexOf(inputOnchangeStatus) > (-1)\n        });\n        \n        if(filterData.length === 0 && inputOnchangeStatus !== null){\n            return (\n                <React.Fragment>\n                    <h3 className=\"zero-related-result\">無相關車次資料</h3>\n                </React.Fragment>\n            )\n        }\n        if(filterData.length !== 0 && inputOnchangeStatus !== null){\n            return filterData;\n        }\n        if(inputOnchangeStatus === null){\n            return data;\n        }\n        return null;\n        \n    }\n\n\n    inputFilterStateHandler = (e) => {\n        const input = e.target.value;\n        const len = input.length;\n        if(len !== 0){\n            this.setState({\n                inputOnchangeStatus:input\n            })\n        }\n        else{\n            this.setState({\n                inputOnchangeStatus:null\n            })\n        }\n    }\n\n\n\n    /* 南下北上按鈕 state setting handler*/\n    boundForStatusHandler = (e) => {\n        this.setState({\n            boundForStatus:e.target.id\n        })\n    }\n\n    /* 南下北上按鈕 style handler*/\n    renderBoundForHandler = () => {\n        const {boundForStatus} = this.state;\n\n        if(boundForStatus === 'south'){\n            return (\n                <React.Fragment>\n                    <h3 \n                        onClick={this.boundForStatusHandler}\n                        id=\"south\"\n                        className=\"train-by-date-bound-for-south\"\n                        style={{\n                            backgroundColor:\"#ff8300\",\n                            color:\"white\"\n                        }}\n                        >南下班次\n                    </h3>\n                    <h3 \n                        onClick={this.boundForStatusHandler}\n                        id=\"north\"\n                        className=\"train-by-date-bound-for-north\"\n                        >北上班次\n                    </h3>\n                    <div className=\"train-by-date-input-container\">\n                        <input\n                            onChange={this.inputFilterStateHandler} \n                            className=\"train-by-date-number-input\" \n                            type=\"search\" \n                            placeholder=\"輸入車次搜尋…\"\n                            pattern=\"[0-9]\"\n                            title=\"輸入車次(0-9)搜尋\"\n                            maxLength=\"4\"\n                            minLength=\"0\"\n                            >\n                        </input>\n                    </div>\n                </React.Fragment>\n            );\n        }\n        if(boundForStatus === 'north'){\n            return (\n                <React.Fragment>\n                    <h3 \n                        onClick={this.boundForStatusHandler}\n                        id=\"south\"\n                        className=\"train-by-date-bound-for-south\">南下班次</h3>\n                    <h3 \n                        onClick={this.boundForStatusHandler}\n                        id=\"north\"\n                        className=\"train-by-date-bound-for-north\"\n                        style={{\n                            backgroundColor:\"#ff8300\",\n                            color:\"white\"\n                        }}\n                        >北上班次\n                    </h3>\n                    <div className=\"train-by-date-input-container\">\n                        <input\n                            onChange={this.inputFilterStateHandler} \n                            className=\"train-by-date-number-input\" \n                            type=\"search\" \n                            placeholder=\"輸入車次搜尋…\"\n                            pattern=\"[0-9]\"\n                            title=\"輸入車次(0-9)搜尋\"\n                            maxLength=\"4\"\n                            minLength=\"0\"\n                            >\n                        </input>\n                    </div>\n                </React.Fragment>\n            );\n        }\n        return null;\n    }\n\n    /* 顯示點選的日期時刻表*/\n    dateDisplay = () => {\n        const {TBDSelectedDay} = this.props;\n        const year = TBDSelectedDay.getFullYear();\n        const month = `0${TBDSelectedDay.getMonth()+1}`;\n        const day = TBDSelectedDay.getDate();\n        const date = `${year}-${month}-${day}`;\n        return date;\n    }\n\n\n\n    /* 在 did mount 的時候，就先整理列車時刻表資料*/\n    componentDidMount(){\n        this.trainFilterHandler();\n    }\n\n\n    render(){\n        // console.log('check status',this.state.inputOnchangeStatus);\n        return (\n            <div className=\"train-by-date-timetable-container\">\n                <h3 className=\"train-by-date-timetable\">{this.dateDisplay()} 時刻表</h3>\n                {this.renderBoundForHandler()}\n                {this.renderTimeTableHandler()}\n            </div>\n        );\n    }\n}\n\nexport default TrainByDateTimeTable;","import React , {Component} from 'react';\nimport LoadingImage from './loading-spin.svg';\nimport '../../less/loadingAnimate.css';\n\nclass LoadingAnimate extends Component{\n\n    state = {\n\n    };\n\n    render(){\n        return (\n            <img src={LoadingImage} alt=\"Loading icon\" id=\"loading\" />\n        );\n    };\n};\n\nexport default LoadingAnimate;","import React , {Component} from 'react';\nimport SidePanel from './sidePanel.jsx';\nimport StationPanel from './stationPanel.jsx';\nimport OriginToDestStationPanel from './originToDestStationPanel.jsx';\nimport TimeTable from './timeTable.jsx';\nimport TrainByDateTimeTable from './trainByDateTimeTable.jsx';\nimport DayPicker from 'react-day-picker';\nimport LoadingAnimate from '../loadingAnimate/loadingAnimate.jsx';\n\n/* style css*/\nimport '../../less/header.css';\nimport '../../less/dayPickerPlugin.css';\nimport 'react-day-picker/lib/style.css';\n\n\n\n\n\nclass Header extends Component {\n\n    /* 在 header 內的 stage 依照 navBarMode 的 state 來顯示元件*/\n    stageRender = () => {\n\n\n        const {\n            // navStatus , \n            sidePanelStatus,\n            sidePanelStatusHandler,\n            stationBtn,\n            stationBtnHandler,\n            OTDfrom,\n            OTDdest,\n            OTDHandler,\n            timeTableData,\n            timeTableTrainNumber,\n            timeTableTrainNumberHandler,\n            TBDStatus,\n            TBDSelectedDay,\n            TBDSubmit,\n            handleDayClick,\n            TBDSubmitHandler,\n            TBDData,\n            TBDTrainNumberHandler\n        } = this.props;\n        \n        return (\n            <React.Fragment>\n                <SidePanel\n                    sidePanelStatus={sidePanelStatus}\n                    sidePanelStatusHandler={sidePanelStatusHandler}\n                />\n                {sidePanelFunctionRender(sidePanelStatus)}\n            </React.Fragment>\n        );\n\n        /* 顯示 initial 頁面*/\n        // if(navStatus === 'initial'){\n        //     return (\n        //         <Header_initial />\n        //     );\n        // };\n        /* 顯示最新消息頁面*/\n        // if(navStatus === 'THSRnews'){\n        //     return (\n        //         <News />\n        //     );\n        // }\n\n        /* 顯示 search 頁面，附帶顯示 sidePanel 及相對應功能頁面*/\n        // if(navStatus === 'search'){\n        //     return (\n        //         <React.Fragment>\n        //             <SidePanel\n        //                 sidePanelStatus={sidePanelStatus}\n        //                 sidePanelStatusHandler={sidePanelStatusHandler}\n        //             />\n        //             {sidePanelFunctionRender(sidePanelStatus)}\n        //         </React.Fragment>\n        //     );\n        // };\n        \n        \n        /* 點選 sidePanel，在 header 顯示相關的功能 */\n        function sidePanelFunctionRender(sidePanelStatusInput){\n            if(sidePanelStatusInput === 'station'){\n                return (\n                    <StationPanel \n                        stationBtn={stationBtn}\n                        stationBtnHandler={stationBtnHandler}\n                    />\n                );\n            };\n            \n            if(sidePanelStatusInput === 'ticketFare'){\n                return (\n                    <OriginToDestStationPanel \n                        OTDHandler={OTDHandler}\n                        OTDfrom={OTDfrom}\n                        OTDdest={OTDdest}\n                    />\n                );\n            };\n            if(sidePanelStatusInput === 'date'){\n                /* 給 react-day-picker 參考，用於 disabled 的變數*/\n\n                Date.prototype.addDays = function(days) {\n                    let date = new Date(this.valueOf());\n                    date.setDate(date.getDate() + days);\n                    return date;\n                }\n        \n                const date = new Date();\n                const beforeDisable = date;\n                const afterDisable = date.addDays(10);\n                return (\n                  <div\n                    className=\"daypicker-container\">\n                    <DayPicker \n                        onDayClick={handleDayClick}\n                        selectedDays={TBDSelectedDay}\n                        disabledDays={{ after:afterDisable , before: beforeDisable  }}\n                        className=\"daypicker-plugin\"\n                    />\n                    {dayPickerSubmitBtnDisplayHandler()}\n                    {trainByDateTimeTable()}\n\n                    \n                  </div>\n                )\n\n                \n            };\n            if(sidePanelStatusInput === 'timeTable' && timeTableData){\n                return (\n                    <TimeTable \n                        timeTableData={timeTableData}\n                        timeTableTrainNumber={timeTableTrainNumber}\n                        timeTableTrainNumberHandler={timeTableTrainNumberHandler}\n                    />\n                );    \n            }\n            else{\n                return (\n                    <LoadingAnimate/>\n                )\n            }\n        };\n\n        /* 在 sidePanel 的 date 功能中，顯示 react-day-picker */\n        function dayPickerSubmitBtnDisplayHandler(){\n            if(\n                typeof(TBDSelectedDay) === 'object' && TBDSelectedDay){\n                    return (\n                        <div \n                            className=\"submit-btn\"\n                            id=\"train-by-date-btn\"\n                            onClick={TBDSubmitHandler}>\n                            查詢\n                        </div>\n                    );\n            };\n        };\n\n        /* 在 sidePanel 的 date 功能中，顯示 timeTable 功能*/\n        function trainByDateTimeTable(){\n            \n            if( \n                // navStatus === 'search' &&\n                sidePanelStatus === 'date' &&\n                TBDSelectedDay !== null &&\n                TBDSubmit &&\n                Array.isArray(TBDData) &&\n                TBDData.length !== 0){\n                return (\n                  <TrainByDateTimeTable \n                    className=\"train-by-date-time-table-style\"\n                    TBDSelectedDay={TBDSelectedDay}\n                    TBDData={TBDData}\n                    TBDTrainNumberHandler={TBDTrainNumberHandler}\n                    // trainByDateTimeTableDetail={this.trainByDateTimeTableDetail}\n                    TBDStatus={TBDStatus}\n                  />\n                )\n            }\n          }\n    }\n\n    render(){\n\n        return (\n            <header>\n                <div className=\"stage\">\n                  {this.stageRender()}\n                </div>\n            </header>\n        );\n        \n    };\n}\n\nexport default Header;","import React , {Component} from 'react';\nimport '../../less/stationInfo.css';\n\nimport apiEndpoint from '../../apiEndpoint.js';\n\n\nclass StationInfo extends Component{\n\n    constructor(props) {\n        super(props);\n        this.mapRef = React.createRef();\n    }\n\n    state = {\n\n    }\n\n    getMatchMap = (nameInEn) => {\n        const map = apiEndpoint.stationInfo.mapUrl[nameInEn];\n        return (\n            <iframe title={nameInEn} src={map} />\n        );\n    }\n\n    scrollToMapRef = () => {\n        window.scrollTo(\n            0, \n            this.mapRef.current.offsetTop\n        ); \n    }\n\n    componentDidMount(){\n        this.scrollToMapRef();\n\n    }\n\n    componentDidUpdate(){\n        this.scrollToMapRef();\n\n    }\n\n    \n    render(){\n        const {stationBtn , stationData} = this.props;\n        const matchInfo = stationData.filter( (ele) => {\n            return (ele.StationName.En === stationBtn);\n        })\n        const nameInZh = matchInfo[0].StationName.Zh_tw;\n        const nameInEn = matchInfo[0].StationName.En;\n        const address = matchInfo[0].StationAddress;\n        return (\n            <article \n                ref={this.mapRef}\n                className=\"station-info\">\n                <h3 className=\"station-info-title-ch\">{nameInZh}\n                    <span className=\"station-info-title-en\">{nameInEn}</span>\n                </h3>\n                <h3 className=\"station-info-address\">{address}</h3>\n                {this.getMatchMap(nameInEn)}\n            </article>\n        );\n    }\n}\n\n\nexport default StationInfo;","import React , {Component} from 'react';\nimport '../../less/oTDFareInfo.css';\n\nclass oTDFareInfo extends Component{\n\n    state = {\n\n    }\n\n    faresInfoArr = [];\n\n    fareFilterHandler = () => {\n        \n        const {OTDData , OTDfrom , OTDdest} = this.props;\n        \n        /* faresInfoArr format*/\n        /* [\"起站中文\" , \"終站中文\" , \"起站英文\" , \"終站英文\" , \"自由坐\" , \"標準座\" , \"商務座\"]*/\n\n        OTDData.map( (ele , index) => {\n            const originStation = ele.OriginStationName.En;\n            const destStation = ele.DestinationStationName.En;\n            if( originStation === OTDfrom && destStation === OTDdest){\n                \n                this.faresInfoArr[0] = ele.OriginStationName.Zh_tw;\n                this.faresInfoArr[1] = ele.DestinationStationName.Zh_tw;\n                this.faresInfoArr[2] = ele.OriginStationName.En;\n                this.faresInfoArr[3] = ele.DestinationStationName.En;\n\n                ele.Fares.map( (ele , index) => {\n                    if(ele.TicketType === \"自由\"){\n                        this.faresInfoArr[4] = ele.Price;\n                    }\n                    if(ele.TicketType === \"標準\"){\n                        this.faresInfoArr[5] = ele.Price;\n                    }\n                    if(ele.TicketType === \"商務\"){\n                        this.faresInfoArr[6] = ele.Price;\n                    }\n                    return null;\n                })\n            }\n            return null;\n        })\n        return ;\n    }\n\n    scrollToBottom = () => {\n        window.scrollTo( 0 , document.body.scrollHeight);\n    }\n\n    componentDidMount(){\n        this.scrollToBottom();\n    }\n\n    componentDidUpdate(){\n        this.scrollToBottom();\n    }\n\n\n    render(){\n        this.fareFilterHandler();\n        return (\n            <div className=\"ticket-class\">\n                <article className=\"fare-station-path\">\n                    <ul className=\"fare-station-ch\">\n                        <li className=\"fare-origin-ch\">\n                            {this.faresInfoArr[0]}\n                        </li>\n                        <li className=\"path-sign\"></li>\n                        <li className=\"fare-dest-ch\">\n                            {this.faresInfoArr[1]}\n                        </li>\n                    </ul>\n                    <ul className=\"fare-station-en\">\n                        <li className=\"fare-origin-en\">\n                            {this.faresInfoArr[2]}\n                        </li>\n                        <li className=\"fare-dest-en\">\n                            {this.faresInfoArr[3]}\n                        </li>\n                    </ul>\n                </article>\n\n                <article className=\"fare-table\">\n                    <ul className=\"fares-row\">\n                        <li className=\"fare-title\">自由座車廂</li>\n                        <li className=\"fare-price\">$NT {this.faresInfoArr[4]}</li>\n                    </ul>\n                    <ul className=\"fares-row\">\n                        <li className=\"fare-title\">標準車廂</li>\n                        <li className=\"fare-price\">$NT {this.faresInfoArr[5]}</li>\n                    </ul>\n                    <ul className=\"fares-row\">\n                        <li className=\"fare-title\">商務車廂</li>\n                        <li className=\"fare-price\">$NT {this.faresInfoArr[6]}</li>\n                    </ul>\n                </article>\n            </div>\n        );\n    }\n} \n\n\nexport default oTDFareInfo;","import React , {Component} from 'react';\nimport '../../less/timeTableDetail.css';\n\n\nclass TimeTableDetail extends Component{\n\n    state = {}\n\n    /* render mainContent 的車次，起訖站標題 */\n    detailDataFilter = () => {\n        const {timeTableTrainNumber , timeTableData} = this.props;\n\n        /* filter 取出與選取的車次資料 */\n        const data = timeTableData.filter( (ele) => (ele.DailyTrainInfo.TrainNo === timeTableTrainNumber) );\n        const trainNo = data[0].DailyTrainInfo.TrainNo;\n        const startStop = data[0].DailyTrainInfo.StartingStationName.Zh_tw;\n        const destStop = data[0].DailyTrainInfo.EndingStationName.Zh_tw;\n        return (\n            <React.Fragment>\n                <h2 className=\"timetable-detail-title train-no\">{trainNo} 車次</h2>\n                <h2 className=\"timetable-detail-title\">{startStop}\n                    <span></span>{destStop}\n                </h2>\n            </React.Fragment>\n        )\n    }\n\n    /* render mainContent 的各車站的路線圖示 */\n    stopDiagram = () => {\n        const {timeTableTrainNumber , timeTableData} = this.props;\n        const data = timeTableData.filter( (ele) => (ele.DailyTrainInfo.TrainNo === timeTableTrainNumber) );\n\n        const pathStops = data[0].StopTimes;\n        const stopNumber = pathStops.length;\n\n        return pathStops.map( (ele , index) => {\n            const stopName = ele.StationName.Zh_tw;\n            const departureTime = ele.DepartureTime;\n            \n            /* 用總站數 pathStops.length 去比較 map index，*/\n            /* map index < (pathStops.length-1) 的就加上 arrow 的 svg 圖示*/\n            if( (index < stopNumber-1) ) {\n                return (\n                    <React.Fragment \n                        key={index}>\n                        <div className=\"stop-set\">\n                            <h3 className=\"stop-name\">\n                                {stopName}\n                            </h3>\n                            <h3 className=\"stop-time\">\n                                {departureTime}\n                            </h3>\n                        </div>\n                        <div className=\"arrow-path-sign\"></div>\n                    </React.Fragment>\n                )\n            }\n            else{\n                return (\n                    <React.Fragment \n                        key={index}>\n                        <div className=\"stop-set\">\n                            <h3 className=\"stop-name\">\n                                {stopName}\n                            </h3>\n                            <h3 className=\"stop-time\">\n                                {departureTime}\n                            </h3>\n                        </div>\n                    </React.Fragment>\n                )\n            }\n        });\n    }\n\n    \n    scrollToMyRef = () => {\n        const height = document.body.scrollHeight;\n        window.scrollTo(0 , height);\n    }\n\n    componentDidMount(){\n        this.scrollToMyRef()\n    }\n\n    componentDidUpdate(){\n        this.scrollToMyRef()\n    }\n    \n    render(){\n        this.detailDataFilter();\n        return (\n            <div className=\"timetable-detail-container\">\n                {this.detailDataFilter()}\n                {this.stopDiagram()}\n            </div>\n        );\n    }\n}\n\nexport default TimeTableDetail;","import React , {Component} from 'react';\nimport '../../less/trainByDateTimeTableDetail.css';\n\nclass TrainByDateTimeTableDetail extends Component{\n\n    state = {}\n\n    /* render mainContent 的車次，起訖站標題 */\n    detailDataFilter = () => {\n        const {TBDStatus , TBDData} = this.props;\n        /* 取出與 clicked item 的車次資料*/\n        const data = TBDData.filter( (ele) => (ele.DailyTrainInfo.TrainNo === TBDStatus) );\n\n        const trainNo = data[0].DailyTrainInfo.TrainNo;\n        const startStop = data[0].DailyTrainInfo.StartingStationName.Zh_tw;\n        const destStop = data[0].DailyTrainInfo.EndingStationName.Zh_tw;\n        return (\n            <React.Fragment>\n                <h2 className=\"timetable-detail-title train-no\">{trainNo} 車次</h2>\n                <h2 className=\"timetable-detail-title\">{startStop}\n                    <span></span>{destStop}\n                </h2>\n            </React.Fragment>\n        )\n    }\n\n    /* render mainContent 的各車站的路線圖示 */\n    stopDiagram = () => {\n        const {TBDStatus , TBDData} = this.props;\n        const data = TBDData.filter( (ele) => (ele.DailyTrainInfo.TrainNo === TBDStatus) );\n\n        const pathStops = data[0].StopTimes;\n        const stopNumber = pathStops.length;\n\n        return pathStops.map( (ele , index) => {\n            const stopName = ele.StationName.Zh_tw;\n            const departureTime = ele.DepartureTime;\n            \n            /* 用總站數 pathStops.length 去比較 map index，*/\n            /* map index < (pathStops.length-1) 的就加上 arrow 的 svg 圖示*/\n            if( (index < stopNumber-1) ) {\n                return (\n                    <React.Fragment \n                        key={index}>\n                        <div className=\"stop-set\">\n                            <h3 className=\"stop-name\">\n                                {stopName}\n                            </h3>\n                            <h3 className=\"stop-time\">\n                                {departureTime}\n                            </h3>\n                        </div>\n                        <div className=\"arrow-path-sign\"></div>\n                    </React.Fragment>\n                )\n            }\n            else{\n                return (\n                    <React.Fragment \n                        key={index}>\n                        <div className=\"stop-set\">\n                            <h3 className=\"stop-name\">\n                                {stopName}\n                            </h3>\n                            <h3 className=\"stop-time\">\n                                {departureTime}\n                            </h3>\n                        </div>\n                    </React.Fragment>\n                )\n            }\n            \n        });\n\n    }\n\n    \n    scrollToMyRef = () => {\n        const height = document.body.scrollHeight;\n        window.scrollTo(0 , height);\n    }\n\n\n    componentDidMount(){\n        this.scrollToMyRef()\n    }\n    componentDidUpdate(){\n        this.scrollToMyRef()\n    }\n    \n    \n\n\n    render(){\n        this.detailDataFilter();\n        return (\n            <div className=\"timetable-detail-container\">\n                {this.detailDataFilter()}\n                {this.stopDiagram()}\n            </div>\n        );\n    }\n}\n\nexport default TrainByDateTimeTableDetail;","import React , {Component} from 'react';\nimport '../../less/main.css';\nimport StationInfo from './stationInfo.jsx';\nimport OTDFareInfo  from './oTDFareInfo.jsx';\nimport TimeTableDetail from './timeTableDetail.jsx';\nimport TrainByDateTimeTableDetail from './trainByDateTimeTableDetail.jsx';\n\nclass Main extends Component{\n\n    state = {\n        \n    };\n\n    mainContentRender = () => {\n        \n        const {\n            // navStatus,\n            sidePanelStatus,\n            stationBtn,\n            stationData,\n            OTDfrom,\n            OTDdest,\n            OTDsubmit,\n            OTDData,\n            timeTableTrainNumber,\n            timeTableData,\n            TBDStatus,\n            TBDData\n        } = this.props;\n\n\n        \n\n        if( \n            // navStatus === 'search' && \n            sidePanelStatus === 'station' &&\n            stationBtn !== null &&\n            stationData !== null){\n                return (\n                    <StationInfo \n                        stationBtn={stationBtn}\n                        stationData={stationData}\n                    />\n                );\n        }\n        if( \n            // navStatus === 'search' && \n            sidePanelStatus === 'ticketFare' &&\n            OTDsubmit && \n            OTDData ){\n                \n                return (\n                    <OTDFareInfo \n                        OTDfrom={OTDfrom}\n                        OTDdest={OTDdest}\n                        OTDData={OTDData}\n                    />\n                );\n        };\n        //TrainByDateTimeTableDetail\n        if( \n            // navStatus === 'search' && \n            sidePanelStatus === 'date' &&\n            TBDStatus &&\n            Array.isArray(TBDData) &&\n            TBDData.length > 0){\n\n                return (\n                    <TrainByDateTimeTableDetail \n                        TBDStatus={TBDStatus}\n                        TBDData={TBDData}\n                    />\n                );\n        };\n        if( \n            // navStatus === 'search' && \n            sidePanelStatus === 'timeTable' &&\n            timeTableTrainNumber &&\n            Array.isArray(timeTableData) &&\n            timeTableData.length > 0){\n                return (\n                    <TimeTableDetail \n                        timeTableTrainNumber={timeTableTrainNumber}\n                        timeTableData={timeTableData}\n                    />\n                );\n        };\n        // if( navStatus === 'search' && \n        //     sidePanelStatus === 'station' &&\n        //     stationBtn !== null &&\n        //     stationData !== null){\n        //         return (\n        //             <StationInfo \n        //                 stationBtn={stationBtn}\n        //                 stationData={stationData}\n        //             />\n        //         );\n        // }\n        return null;\n    }\n\n    render(){\n        // const {\n            // navStatus,\n        //     sidePanelStatus,\n        //     stationBtn,\n        //     stationData,\n        //     OTDfrom,\n        //     OTDdest,\n        //     OTDsubmit,\n        //     OTDData,\n        //     timeTableTrainNumber,\n        // } = this.props;\n        // console.log('======',sidePanelStatus , timeTableTrainNumber)\n        return (\n            <main>\n                {this.mainContentRender()}\n            </main>\n        );\n    };\n};\n\n\nexport default Main;","import React , {Component} from 'react';\nimport Header from './header/header.jsx';\nimport Main from './main/main.jsx';\nimport axios from 'axios';\nimport apiEndpoint from '../apiEndpoint.js';\n\nclass SearchPage extends Component{\n\n    state = {\n        // navStatus:'initial',\n        sidePanelStatus:'station',\n        sidePanelFunctionState:{\n            stationBtn:null,\n            OTDfrom:null,\n            OTDdest:null,\n            OTDsubmit:false,\n            timeTableTrainNumber:null,\n            TBDStatus:null,\n            TBDSelectedDay:null,\n            TBDSubmit:false,\n        },\n        data:{\n            station:null,\n            OTD:null,\n            timeTable:null,\n            TBD:null,\n        }\n    }\n\n    \n/*===== react-day-picker 運作過程* =====/\n/* 先經由點選 day picker 選擇日期，改變 selected 狀態*/\n  handleDayClick = (day, { selected, disabled }) => {\n\n    const {\n        TBDStatus,\n        // TBDSelectedDay,\n        // TBDSubmit,\n    } = this.state;\n\n    /* 如果點選了 disabled 按鈕就不設定 state，直接 return */\n    if(disabled){\n      return;\n    };\n\n    /* 如果點選了之前已經選擇的按鈕，就取消原本的狀態，改為 null*/\n    if(selected){\n        this.setState({\n            sidePanelFunctionState:{\n                stationBtn:null,\n                OTDfrom:null,\n                OTDdest:null,\n                OTDsubmit:false,\n                timeTableTrainNumber:null,\n                TBDStatus:TBDStatus,\n                TBDSelectedDay:null,\n                TBDSubmit:false,\n            }\n        });\n      return;\n    };\n    /* 正常設定點選的按鈕 state*/\n    this.setState({\n        sidePanelFunctionState:{\n            stationBtn:null,\n            OTDfrom:null,\n            OTDdest:null,\n            OTDsubmit:false,\n            timeTableTrainNumber:null,\n            TBDStatus:null,\n            TBDSelectedDay:day,\n            TBDSubmit:false,\n        }\n    });\n    \n  }\n\n  /* TBD timeTable clicked handler*/\n    TBDTrainNumberHandler = (e) => {\n        let target = e.target;\n        while(target.tagName !== 'ARTICLE'){\n            target = target.parentNode;\n        }\n        const id = target.id;\n\n        const {\n            // TBDStatus , \n            TBDSelectedDay,\n            TBDSubmit,\n        } = this.state.sidePanelFunctionState;\n\n        if( typeof(id) === 'string' &&\n            id.length === 4){\n                this.setState({\n                    sidePanelFunctionState:{\n                        stationBtn:null,\n                        OTDfrom:null,\n                        OTDdest:null,\n                        OTDsubmit:false,\n                        timeTableTrainNumber:null,\n                        TBDStatus:id,\n                        TBDSelectedDay:TBDSelectedDay,\n                        TBDSubmit:TBDSubmit,\n                    }\n                })\n        }\n\n    }\n\n    \n    TBDSubmitHandler = (e) => {\n        if(e.target.id === \"train-by-date-btn\"){\n            const {\n                // TBDStatus,\n                TBDSelectedDay,\n            } = this.state.sidePanelFunctionState;\n    \n            this.setState({\n                sidePanelFunctionState:{\n                    stationBtn:null,\n                    OTDfrom:null,\n                    OTDdest:null,\n                    OTDsubmit:false,\n                    timeTableTrainNumber:null,\n                    TBDStatus:null,\n                    TBDSelectedDay:TBDSelectedDay,\n                    TBDSubmit:true,\n                }\n            });\n            return;\n        }\n        return;\n    }\n\n\n\n\n\n\n/*=============================================*/\n    /* 時刻表點選列車 擷取車次 state handler*/\n    timeTableTrainNumberHandler = (e) => {\n        let target = e.target;\n        while( target.tagName !== \"ARTICLE\"){\n            target = target.parentNode;\n        }\n        const id = target.id;\n        if(typeof(id) === \"string\" && id.length > 3){\n            this.setState({\n                sidePanelFunctionState:{\n                    stationBtn:null,\n                    OTDfrom:null,\n                    OTDdest:null,\n                    OTDsubmit:false,\n                    timeTableTrainNumber:id,\n                    TBDStatus:null,\n                    TBDSelectedDay:null,\n                    TBDSubmit:false,\n                }\n            });\n        }\n    };\n\n\n    \n\n/*=============================================*/\n    /* 偵測票價點選的 起訖 按鈕，及查詢按鈕*/\n    OTDHandler = (e) => {\n        const target = e.target;\n        const id = target.id;\n        const {\n            stationBtn , \n            OTDfrom , \n            OTDdest , \n            // OTDsubmit\n        } = this.state.sidePanelFunctionState;\n\n        if(target.classList.contains('origin-panel')){\n            this.setState({\n                sidePanelFunctionState:{\n                    stationBtn:stationBtn,\n                    OTDfrom:id,\n                    OTDdest:OTDdest,\n                    OTDsubmit:null,\n                    timeTableTrainNumber:null,\n                    TBDStatus:null,\n                    TBDSelectedDay:null,\n                    TBDSubmit:false,\n                }\n            });\n        };\n        if(target.classList.contains('dest-panel')){\n            this.setState({\n                sidePanelFunctionState:{\n                    stationBtn:stationBtn,\n                    OTDfrom:OTDfrom,\n                    OTDdest:id,\n                    OTDsubmit:null,\n                    timeTableTrainNumber:null,\n                    TBDStatus:null,\n                    TBDSelectedDay:null,\n                    TBDSubmit:false,\n                }\n            });\n        };\n        if(target.id === 'bubmit-btn'){\n            this.setState({\n                sidePanelFunctionState:{\n                    stationBtn:null,\n                    OTDfrom:OTDfrom,\n                    OTDdest:OTDdest,\n                    OTDsubmit:true,\n                    timeTableTrainNumber:null,\n                    TBDStatus:null,\n                    TBDSelectedDay:null,\n                    TBDSubmit:false,\n                }\n            });\n        }\n        return;\n    }\n\n\n/*=============================================*/\n    /* station state 按鈕*/\n    stationBtnHandler = (e) => {\n        const {OTDfrom , OTDdest} = this.state.sidePanelFunctionState;\n        const id = e.target.id;\n        this.setState({\n            sidePanelFunctionState:{\n                stationBtn:id,\n                OTDfrom:OTDfrom,\n                OTDdest:OTDdest,\n                OTDsubmit:null,\n                timeTableTrainNumber:null,\n                TBDStatus:null,\n                TBDSelectedDay:null,\n                TBDSubmit:false,\n            }\n        });\n    };\n    \n/*=============================================*/\n    /* sidePanel state 變更*/\n    sidePanelStatusHandler = (e) => {\n        const id = e.target.id;\n        this.setState({\n            sidePanelStatus:id,\n            sidePanelFunctionState:{\n                stationBtn:null,\n                OTDfrom:null,\n                OTDdest:null,\n                OTDsubmit:false,\n                \n                timeTableTrainNumber:null,\n                TBDStatus:null,\n                TBDSelectedDay:null,\n                TBDSubmit:false,\n            },\n        });\n    };\n    \n/*=============================================*/\n    /* nav state 變更*/\n    navStatusHandler = (e) => {\n        const id = e.target.id;\n        this.setState({\n            navStatus:id,\n            sidePanelStatus:'station',\n            sidePanelFunctionState:{\n                stationBtn:null,\n                OTDfrom:null,\n                OTDdest:null,\n                OTDsubmit:false,\n                \n                timeTableTrainNumber:null,\n                TBDStatus:null,\n                TBDSelectedDay:null,\n                TBDSubmit:false,\n            },\n        });\n    };\n\n    \n    \n    componentDidUpdate(){\n\n        /* 當點選 nav search 按鈕之後，會發送 station ajax request */\n        const {\n            // navStatus , \n            sidePanelStatus\n        } = this.state;\n        \n        /* status : timeTable clicked item*/\n        /* selectedDay : react-day-picker clicked day*/\n        const {\n            // TBDStatus,\n            TBDSelectedDay,\n            TBDSubmit\n        } = this.state.sidePanelFunctionState;\n        \n        const {\n            station , \n            OTD , \n            timeTable , \n            TBD\n        } = this.state.data;\n\n        if( \n            // navStatus === 'search' && \n            sidePanelStatus === 'station' && \n            (station === null) || \n            (Array.isArray(station) && (station.length === 0) )){\n                axios(apiEndpoint.stationInfo.url)\n                    .then( (resp) => {\n                        try{\n                            if( resp.status === 200 &&\n                                Array.isArray(resp.data) &&\n                                resp.data.length > 0){\n                                    this.setState({\n                                        data:{\n                                            station:resp.data,\n                                            OTD:null,\n                                            timeTable:timeTable,\n                                            TBD:TBD\n                                        }\n                                    })\n                            }\n                        }\n                        catch(e){\n                            console.log(e)\n                        }\n                    })\n                    .catch( (err) => {\n                        console.log(err);\n                    })\n        };\n\n\n        /* 行程票價 state handler */\n        if( \n            // navStatus === 'search' && \n            sidePanelStatus === 'ticketFare' &&\n            OTD === null){\n                axios(apiEndpoint.ticketFare.url)\n                    .then( (resp) => {\n                        try{\n                            if( resp.status === 200 ){\n                                this.setState({\n                                    data:{\n                                        station:station,\n                                        OTD:resp.data,\n                                        timeTable:timeTable,\n                                        TBD:TBD\n                                    }\n                                })\n                            }\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n                    })\n                    .catch( (err) => {\n                        console.log(err);\n                    })\n        };\n\n        /* 日期查詢車次 state handler */\n        if( \n            // navStatus === 'search' && \n            sidePanelStatus === 'date' &&\n            TBDSubmit &&\n            typeof(TBDSelectedDay) === 'object' &&\n            TBDSelectedDay &&\n            TBD === null){\n                \n                const year = TBDSelectedDay.getFullYear();\n                const month = `0${(TBDSelectedDay.getMonth()+1)}`;\n                const day = TBDSelectedDay.getDate();\n                const url = `${apiEndpoint.trainNoByDate.url}${year}-${month}-${day}?$format=JSON`;\n\n                axios(url)\n                    .then( (resp) => {\n                        try{\n                            if( resp.status === 200 && \n                                Array.isArray(resp.data) &&\n                                resp.data.length > 0){\n                                    this.setState({\n                                        data:{\n                                            station:station ,\n                                            OTD:OTD ,\n                                            timeTable:timeTable ,\n                                            TBD:resp.data\n                                        }\n                                    })\n                            }\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n                    })\n                    .catch( (err) => {\n                        console.log(err);\n                    })\n        };\n\n        /* 時刻表 timeTable state handler*/\n        if( \n            // navStatus === 'search' && \n            sidePanelStatus === 'timeTable' &&\n            timeTable === null){\n                axios(apiEndpoint.todayTrainTimeTable.url)\n                    .then( (resp) => {\n                        try{\n                            if(resp.status === 200){\n                                this.setState({\n                                    data:{\n                                        station:station,\n                                        OTD:OTD,\n                                        timeTable:resp.data,\n                                        TBD:TBD\n                                    }\n                                });\n                            };\n                        }\n                        catch(e){\n                            console.log(e);\n                        };\n                    })\n                    .catch( (err) => {\n                        console.log(err);\n                    });\n        };\n    };\n\n    loadingAnimateHandler = () => {\n\n    }\n\n    render() {\n        const {\n            station:stationData,\n            OTD:OTDData,\n            timeTable:timeTableData,\n            TBD:TBDData\n        } = this.state.data;\n\n        const {\n            // navStatus,\n            sidePanelStatus\n        } = this.state;\n\n        const {\n            stationBtn,\n            OTDfrom,\n            OTDdest,\n            OTDsubmit,\n            timeTableTrainNumber,\n            TBDStatus,\n            TBDSelectedDay,\n            TBDSubmit\n        } = this.state.sidePanelFunctionState;\n        \n        return(\n            <React.Fragment>\n                <Header \n                    // navStatus={navStatus}\n                    // navStatusHandler={this.navStatusHandler}\n                    sidePanelStatusHandler={this.sidePanelStatusHandler}\n                    sidePanelStatus={sidePanelStatus}\n                    stationBtn={stationBtn}\n                    stationBtnHandler={this.stationBtnHandler}\n                    OTDfrom={OTDfrom}\n                    OTDdest={OTDdest}\n                    OTDHandler={this.OTDHandler}\n                    timeTableData={timeTableData}\n                    timeTableTrainNumber={timeTableTrainNumber}\n                    timeTableTrainNumberHandler={this.timeTableTrainNumberHandler}\n                    handleDayClick={this.handleDayClick}\n                    TBDStatus={TBDStatus}\n                    TBDSelectedDay={TBDSelectedDay}\n                    TBDSubmit={TBDSubmit}\n                    TBDTrainNumberHandler={this.TBDTrainNumberHandler}\n                    TBDSubmitHandler={this.TBDSubmitHandler}\n                    TBDData={TBDData}\n                />\n                <Main \n                    // navStatus={navStatus}\n                    sidePanelStatus={sidePanelStatus}\n                    stationBtn={stationBtn}\n                    stationData={stationData}\n                    OTDfrom={OTDfrom}\n                    OTDdest={OTDdest}\n                    OTDsubmit={OTDsubmit}\n                    OTDData={OTDData}\n                    timeTableData={timeTableData}\n                    timeTableTrainNumber={timeTableTrainNumber}\n                    TBDStatus={TBDStatus}\n                    TBDData={TBDData}\n                />\n                \n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default SearchPage;","import React , {Component} from 'react';\nimport '../less/footer.css';\n\nclass Footer extends Component{\n\n    state = {\n\n    };\n\n    render(){\n        return (\n        <footer>\n            <div className=\"footer-logo\">\n                <h1 className=\"footer-ch-logo\">台灣高鐵公開資訊查詢</h1>\n                <h1 className=\"footer-en-logo\">THSR Public Info</h1>\n            </div>\n            <span className=\"footer-author-github\">\n                <a href=\"https://github.com/adyjs\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n            </span>\n            <span className=\"footer-author\">Adyjs</span>\n            <span className=\"footer-author-email\">adyjsdev@gmail.com</span>\n            <span className=\"footer-claim-ch\">本網站內的資訊，包含文字、圖片…等等，分屬於台灣高鐵、交通部之公開 API 資料，或其他公開網站內容。這些相關的資訊、圖片之著作權，皆屬原著作人所有，本人僅做網站樣式創作、資訊介接，以及非商業之個人學習、練習之用途。</span>\n            <span className=\"footer-claim-en\">All the contents of this website, including text, images...,all that may from the THSR or MOTC or other public website respectively, all the rights of these contents above are belonging to the original source or rights holder ; In this website , only do the front-end website style create , for non-business and personal practice purpose.</span>\n        </footer>);\n    };\n}\n\nexport default Footer;","import React , {Component} from 'react';\nimport Nav from './components/nav/nav.jsx';\nimport InitialPage from './components/initial/initialPage.jsx';\nimport News from './components/news.jsx';\nimport SearchPage from './components/searchPage.jsx';\nimport Footer from './components/footer.jsx';\nimport './App.css';\nimport {Route} from 'react-router-dom';\n\n\nclass App extends Component {\n  render(){\n    return (\n      <React.Fragment>\n        <Nav />\n        <Route path=\"/\" exact component={InitialPage}></Route>\n        <Route path=\"/news\" component={News}></Route>\n        <Route path=\"/search\" component={SearchPage}></Route>\n        <Footer />\n      </React.Fragment>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}